/* Modern Chat Bubble CSS */
:root {
    --primary-color: #6366f1;
    --primary-hover: #5855eb;
    --success-color: #10b981;
    --warning-color: #f59e0b;
    --error-color: #ef4444;
    --thinking-color: #8b5cf6;
    
    --bg-primary: #0f0f23;
    --bg-secondary: #1a1a2e;
    --bg-glass: rgba(255, 255, 255, 0.05);
    --bg-glass-hover: rgba(255, 255, 255, 0.1);
    
    --text-primary: #ffffff;
    --text-secondary: #a1a1aa;
    --text-muted: #71717a;
    
    --border-color: rgba(255, 255, 255, 0.1);
    --border-hover: rgba(255, 255, 255, 0.2);
    
    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.3);
    --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.4);
    
    --radius-md: 0.5rem;
    --radius-lg: 0.75rem;
    --radius-xl: 1rem;
    
    --font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
}

/* Light Theme */
[data-theme="light"] {
    --bg-primary: #ffffff;
    --bg-secondary: #f8fafc;
    --bg-glass: rgba(0, 0, 0, 0.02);
    --bg-glass-hover: rgba(0, 0, 0, 0.05);
    
    --text-primary: #1e293b;
    --text-secondary: #475569;
    --text-muted: #64748b;
    
    --border-color: rgba(0, 0, 0, 0.1);
    --border-hover: rgba(0, 0, 0, 0.15);
}

/* Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: var(--font-family);
    background: transparent;
    color: var(--text-primary);
    line-height: 1.5;
    overflow: hidden;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/* Bubble Container */
.bubble-container {
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-xl);
    box-shadow: var(--shadow-xl);
    padding: 1rem;
    gap: 1rem;
}

/* Input Section */
.input-section {
    flex: 1;
    display: flex;
    flex-direction: column;
}

.input-wrapper {
    display: flex;
    align-items: flex-end;
    gap: 0.75rem;
    background: var(--bg-glass);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-lg);
    padding: 1rem;
    transition: all 0.2s ease;
}

.input-wrapper:focus-within {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
    background: var(--bg-glass-hover);
}

#messageInput {
    flex: 1;
    background: transparent;
    border: none;
    outline: none;
    color: var(--text-primary);
    font-size: 1rem;
    font-family: var(--font-family);
    resize: none;
    min-height: 3rem;
    max-height: 8rem;
    line-height: 1.5;
    font-weight: 400;
}

#messageInput::placeholder {
    color: var(--text-muted);
}

.send-btn {
    width: 2.5rem;
    height: 2.5rem;
    background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
    border: none;
    border-radius: var(--radius-md);
    color: white;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    font-size: 0.875rem;
}

.send-btn:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-lg);
}

.send-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
}

/* Controls Section */
.controls-section {
    border-top: 1px solid var(--border-color);
    padding-top: 1rem;
}

.controls-row {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 0.875rem;
}

.control-group {
    display: flex;
    align-items: center;
}

.separator {
    color: var(--text-muted);
    font-weight: 300;
}

.control-select {
    background: var(--bg-glass);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-md);
    color: var(--text-primary);
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
    cursor: pointer;
    transition: all 0.2s ease;
    font-family: var(--font-family);
    min-width: 100px;
}

.control-select:hover {
    border-color: var(--border-hover);
    background: var(--bg-glass-hover);
}

.control-select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);
}

.token-info {
    color: var(--text-secondary);
    font-weight: 500;
    font-variant-numeric: tabular-nums;
    min-width: 80px;
}

.status-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-secondary);
    font-weight: 500;
}

.status-dot {
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;
    animation: pulse 2s infinite;
}

.status-dot.ready { 
    background: var(--success-color); 
}

.status-dot.generating { 
    background: var(--warning-color); 
    animation: pulse 1s infinite;
}

.status-dot.executing { 
    background: var(--primary-color); 
    animation: pulse 0.8s infinite;
}

.status-dot.thinking { 
    background: var(--thinking-color); 
    animation: pulse 1.2s infinite;
}

.status-dot.error { 
    background: var(--error-color); 
    animation: none;
}

@keyframes pulse {
    0%, 100% { 
        opacity: 1; 
        transform: scale(1);
    }
    50% { 
        opacity: 0.6; 
        transform: scale(0.9);
    }
}

/* Auto-resize textarea */
#messageInput {
    overflow-y: hidden;
}

/* Responsive adjustments */
@media (max-width: 400px) {
    .bubble-container {
        padding: 0.75rem;
        gap: 0.75rem;
    }
    
    .controls-row {
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    .control-select {
        min-width: 80px;
        font-size: 0.8rem;
    }
}

/* Focus styles */
button:focus-visible,
select:focus-visible,
textarea:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

/* Smooth transitions */
* {
    transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
}

/* Loading state for send button */
.send-btn.loading {
    background: var(--text-muted);
}

.send-btn.loading i {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}
